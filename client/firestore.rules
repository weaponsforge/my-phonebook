rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Is the user signed-in using basic authentication?
    function isSignedIn() {
      return request.auth != null;
    }

    // Is the signed-in user a valid App user?
    // Has a custom claims "account_level" value: 1=admin, 2=user
    function isValidUser() {
      return isSignedIn() && request.auth.token.account_level != null
    }

    // Does the signed-in user's auth uid match the requested userId?
    function isAccountOwner(userId) {
      return request.auth.uid == userId;
    }

    // Block read/write access on all paths from the root level
    match /{document=**} {
    	allow read, write: if false;
    }

		// Authenticated users can read, create and update only their own user document
    // under the /users root-collection only
    match /users/{userId}  {
    	allow create, delete: if false;
      allow update: if isValidUser() && isAccountOwner(userId);
      allow get: if isValidUser() && isAccountOwner(userId);
      allow list: if false;
    }

		// Authenticated users can read only their own subcollections under /users/{userId}
    // Unauthenticated users cannot write in any subcollections under /users/{userId}
    match /users/{userId}/{document=**} {
      allow write: if false;
      allow list: if isValidUser() && isAccountOwner(userId);
    }

		// Only authenticated users can read, create and update documents under the
		// users/{userId}/cards subcollection
    match /users/{userId}/contacts/{contactId} {
      allow write: if isValidUser() && isAccountOwner(userId);
      allow get: if isValidUser() && isAccountOwner(userId);
      allow list: if isValidUser() && isAccountOwner(userId);
    }
  }
}
