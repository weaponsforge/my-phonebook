rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Is the user signed-in using basic authentication?
    function isSignedIn() {
      return request.auth != null;
    }

    // Is the signed-in user a valid App user?
    // Has a custom claims "account_level" value: 1=admin, 2=user
    function isValidUser() {
      return isSignedIn() && request.auth.token.account_level != null
    }

    // Does the signed-in user's auth uid match the requested userId?
    function isAccountOwner(userId) {
      return request.auth.uid == userId;
    }

    // New Contact documents should contain only the specified keys
    function validNewContact () {
     	return request.resource.data.keys().hasOnly(['doc_id', 'name', 'location', 'city', 'address', 'hours', 'cuisine', 'date_created', 'date_updated']);
    }

    // Contact for update should only contain all (or any) of the specified keys
    function isValidUpdateContactFields () {
    	return
      	// Contains required field
        (request.resource.data.diff(resource.data).affectedKeys().hasAll(
        	['date_updated'])) &&
        // Does not allow updating the following fields
      	(!request.resource.data.diff(resource.data).affectedKeys().hasAny(
          ['doc_id', 'date_created'])) &&
        // Only allows updates for the following fields
      	(request.resource.data.diff(resource.data).affectedKeys().hasOnly(
        	['name', 'location', 'city', 'address', 'hours', 'cuisine', 'date_updated']))
    }

    // Block read/write access on all paths from the root level
    match /{document=**} {
    	allow read, write: if false;
    }

		// Authenticated users can read, create and update only their own user document
    // under the /users root-collection only
    match /users/{userId}  {
    	allow create, delete: if false;
      allow update: if isValidUser() && isAccountOwner(userId);
      allow get: if isValidUser() && isAccountOwner(userId);
      allow list: if false;
    }

		// Authenticated users can read only their own subcollections under /users/{userId}
    // Unauthenticated users cannot write in any subcollections under /users/{userId}
    match /users/{userId}/{document=**} {
      allow write: if false;
      allow list: if isValidUser() && isAccountOwner(userId);
    }

		// Only authenticated users can read, create and update documents under the
		// users/{userId}/posts subcollection
    match /users/{userId}/contacts/{contactId} {
    	allow create: if isValidUser() && isAccountOwner(userId) && validNewContact();
      allow update: if isValidUser() && isAccountOwner(userId) && isValidUpdateContactFields();
      allow delete: if isValidUser() && isAccountOwner(userId);
      allow get: if isValidUser() && isAccountOwner(userId);
      allow list: if isValidUser() && isAccountOwner(userId);
    }
  }
}
